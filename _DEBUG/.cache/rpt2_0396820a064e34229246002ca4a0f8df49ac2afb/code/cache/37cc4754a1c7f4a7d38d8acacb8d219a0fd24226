{"code":"import { EventGroup } from './EventGroup';\r\nimport { findScrollableParent } from './scroll';\r\nimport { getRect } from './dom';\r\nconst SCROLL_ITERATION_DELAY = 16;\r\nconst SCROLL_GUTTER_HEIGHT = 100;\r\nconst MAX_SCROLL_VELOCITY = 15;\r\nexport class AutoScroll {\r\n    constructor(element) {\r\n        this._events = new EventGroup(this);\r\n        this._scrollableParent = findScrollableParent(element);\r\n        this._incrementScroll = this._incrementScroll.bind(this);\r\n        this._scrollRect = getRect(this._scrollableParent);\r\n        if (this._scrollableParent === window) {\r\n            this._scrollableParent = document.body;\r\n        }\r\n        if (this._scrollableParent) {\r\n            this._events.on(window, 'mousemove', this._onMouseMove, true);\r\n            this._events.on(window, 'touchmove', this._onTouchMove, true);\r\n        }\r\n    }\r\n    dispose() {\r\n        this._events.dispose();\r\n        this._stopScroll();\r\n    }\r\n    _onMouseMove(ev) {\r\n        this._computeScrollVelocity(ev.clientY);\r\n    }\r\n    _onTouchMove(ev) {\r\n        if (ev.touches.length > 0) {\r\n            this._computeScrollVelocity(ev.touches[0].clientY);\r\n        }\r\n    }\r\n    _computeScrollVelocity(clientY) {\r\n        if (!this._scrollRect) {\r\n            return;\r\n        }\r\n        let scrollRectTop = this._scrollRect.top;\r\n        let scrollClientBottom = scrollRectTop + this._scrollRect.height - SCROLL_GUTTER_HEIGHT;\r\n        if (clientY < scrollRectTop + SCROLL_GUTTER_HEIGHT) {\r\n            this._scrollVelocity = Math.max(-MAX_SCROLL_VELOCITY, -MAX_SCROLL_VELOCITY * ((SCROLL_GUTTER_HEIGHT - (clientY - scrollRectTop)) / SCROLL_GUTTER_HEIGHT));\r\n        }\r\n        else if (clientY > scrollClientBottom) {\r\n            this._scrollVelocity = Math.min(MAX_SCROLL_VELOCITY, MAX_SCROLL_VELOCITY * ((clientY - scrollClientBottom) / SCROLL_GUTTER_HEIGHT));\r\n        }\r\n        else {\r\n            this._scrollVelocity = 0;\r\n        }\r\n        if (this._scrollVelocity) {\r\n            this._startScroll();\r\n        }\r\n        else {\r\n            this._stopScroll();\r\n        }\r\n    }\r\n    _startScroll() {\r\n        if (!this._timeoutId) {\r\n            this._incrementScroll();\r\n        }\r\n    }\r\n    _incrementScroll() {\r\n        if (this._scrollableParent) {\r\n            this._scrollableParent.scrollTop += Math.round(this._scrollVelocity);\r\n        }\r\n        this._timeoutId = setTimeout(this._incrementScroll, SCROLL_ITERATION_DELAY);\r\n    }\r\n    _stopScroll() {\r\n        if (this._timeoutId) {\r\n            clearTimeout(this._timeoutId);\r\n            delete this._timeoutId;\r\n        }\r\n    }\r\n}\r\n"}
