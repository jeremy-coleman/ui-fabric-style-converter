{"code":"const GLOBAL_SETTINGS_PROP_NAME = '__globalSettings__';\r\nconst CALLBACK_STATE_PROP_NAME = '__callbacks__';\r\nlet _global;\r\nlet _counter = 0;\r\nif (typeof window !== 'undefined') {\r\n    _global = window;\r\n}\r\nelse if (typeof global !== 'undefined') {\r\n    _global = global;\r\n}\r\nelse {\r\n    _global = {};\r\n}\r\nlet _globalSettings = (_global[GLOBAL_SETTINGS_PROP_NAME] = _global[GLOBAL_SETTINGS_PROP_NAME] || {\r\n    [CALLBACK_STATE_PROP_NAME]: {}\r\n});\r\nconst _callbacks = _globalSettings[CALLBACK_STATE_PROP_NAME];\r\nexport class GlobalSettings {\r\n    static getValue(key, defaultValue) {\r\n        if (_globalSettings[key] === undefined) {\r\n            _globalSettings[key] = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\r\n        }\r\n        return _globalSettings[key];\r\n    }\r\n    static setValue(key, value) {\r\n        let oldValue = _globalSettings[key];\r\n        if (value !== oldValue) {\r\n            _globalSettings[key] = value;\r\n            let changeDescription = {\r\n                oldValue,\r\n                value,\r\n                key\r\n            };\r\n            for (let id in _callbacks) {\r\n                if (_callbacks.hasOwnProperty(id)) {\r\n                    _callbacks[id](changeDescription);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n    static addChangeListener(cb) {\r\n        let id = cb.__id__;\r\n        if (!id) {\r\n            id = cb.__id__ = String(_counter++);\r\n        }\r\n        _callbacks[id] = cb;\r\n    }\r\n    static removeChangeListener(cb) {\r\n        delete _callbacks[cb.__id__];\r\n    }\r\n}\r\n"}
