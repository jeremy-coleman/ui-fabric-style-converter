{"code":"export function merge(target, ...args) {\r\n    for (const arg of args) {\r\n        _merge(target || {}, arg);\r\n    }\r\n    return target;\r\n}\r\nfunction _merge(target, source, circularReferences = []) {\r\n    circularReferences.push(source);\r\n    for (let name in source) {\r\n        if (source.hasOwnProperty(name)) {\r\n            const value = source[name];\r\n            if (typeof value === 'object') {\r\n                const isCircularReference = circularReferences.indexOf(value) > -1;\r\n                target[name] = isCircularReference ? value : _merge(target[name] || {}, value, circularReferences);\r\n            }\r\n            else {\r\n                target[name] = value;\r\n            }\r\n        }\r\n    }\r\n    circularReferences.pop();\r\n    return target;\r\n}\r\n"}
