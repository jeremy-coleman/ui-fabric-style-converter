{"code":"const DEFAULT_HEIGHT = '50%';\r\nconst DEFAULT_WIDTH = 20;\r\nexport function getFadedOverflowStyle(theme, color = 'bodyBackground', direction = 'horizontal', width = getDefaultValue('width', direction), height = getDefaultValue('height', direction)) {\r\n    const colorValue = theme.semanticColors[color] || theme.palette[color];\r\n    const rgbColor = color2rgb(colorValue);\r\n    const rgba = `rgba(${rgbColor.r}, ${rgbColor.g}, ${rgbColor.b}, 0)`;\r\n    const gradientDirection = direction === 'vertical' ? 'to bottom' : 'to right';\r\n    return {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        right: 0,\r\n        bottom: 0,\r\n        width: width,\r\n        height: height,\r\n        pointerEvents: 'none',\r\n        backgroundImage: `linear-gradient(${gradientDirection}, ${rgba} 0%, ${colorValue} 100%)`\r\n    };\r\n}\r\nfunction color2rgb(colorValue) {\r\n    if (colorValue[0] === '#') {\r\n        return {\r\n            r: parseInt(colorValue.slice(1, 3), 16),\r\n            g: parseInt(colorValue.slice(3, 5), 16),\r\n            b: parseInt(colorValue.slice(5, 7), 16)\r\n        };\r\n    }\r\n    else if (colorValue.indexOf('rgba(') === 0) {\r\n        colorValue = colorValue.match(/rgba\\(([^)]+)\\)/)[1];\r\n        const parts = colorValue.split(/ *, */).map(Number);\r\n        return {\r\n            r: parts[0],\r\n            g: parts[1],\r\n            b: parts[2]\r\n        };\r\n    }\r\n    return {\r\n        r: 255,\r\n        g: 255,\r\n        b: 255\r\n    };\r\n}\r\nfunction getDefaultValue(style, direction) {\r\n    if (style === 'width') {\r\n        return direction === 'horizontal' ? DEFAULT_WIDTH : '100%';\r\n    }\r\n    else {\r\n        return direction === 'vertical' ? DEFAULT_HEIGHT : '100%';\r\n    }\r\n}\r\n"}
