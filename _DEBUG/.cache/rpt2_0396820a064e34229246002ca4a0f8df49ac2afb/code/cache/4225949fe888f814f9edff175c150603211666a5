{"code":"import { getDocument } from './dom';\r\nimport { mergeStyles } from '@uifabric/merge-styles';\r\nlet _scrollbarWidth;\r\nlet _bodyScrollDisabledCount = 0;\r\nconst DisabledScrollClassName = mergeStyles({\r\n    overflow: 'hidden !important'\r\n});\r\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\r\nconst _makeElementScrollAllower = () => {\r\n    let _previousClientY = 0;\r\n    let _element = null;\r\n    const _saveClientY = (event) => {\r\n        if (event.targetTouches.length === 1) {\r\n            _previousClientY = event.targetTouches[0].clientY;\r\n        }\r\n    };\r\n    const _preventOverscrolling = (event) => {\r\n        if (event.targetTouches.length !== 1) {\r\n            return;\r\n        }\r\n        event.stopPropagation();\r\n        if (!_element) {\r\n            return;\r\n        }\r\n        const clientY = event.targetTouches[0].clientY - _previousClientY;\r\n        if (_element.scrollTop === 0 && clientY > 0) {\r\n            event.preventDefault();\r\n        }\r\n        if (_element.scrollHeight - _element.scrollTop <= _element.clientHeight && clientY < 0) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    return (element, events) => {\r\n        if (!element) {\r\n            return;\r\n        }\r\n        events.on(element, 'touchstart', _saveClientY);\r\n        events.on(element, 'touchmove', _preventOverscrolling);\r\n        _element = element;\r\n    };\r\n};\r\nexport const allowScrollOnElement = _makeElementScrollAllower();\r\nconst _disableIosBodyScroll = (event) => {\r\n    event.preventDefault();\r\n};\r\nexport function disableBodyScroll() {\r\n    let doc = getDocument();\r\n    if (doc && doc.body && !_bodyScrollDisabledCount) {\r\n        doc.body.classList.add(DisabledScrollClassName);\r\n        doc.body.addEventListener('touchmove', _disableIosBodyScroll, { passive: false, capture: false });\r\n    }\r\n    _bodyScrollDisabledCount++;\r\n}\r\nexport function enableBodyScroll() {\r\n    if (_bodyScrollDisabledCount > 0) {\r\n        let doc = getDocument();\r\n        if (doc && doc.body && _bodyScrollDisabledCount === 1) {\r\n            doc.body.classList.remove(DisabledScrollClassName);\r\n            doc.body.removeEventListener('touchmove', _disableIosBodyScroll);\r\n        }\r\n        _bodyScrollDisabledCount--;\r\n    }\r\n}\r\nexport function getScrollbarWidth() {\r\n    if (_scrollbarWidth === undefined) {\r\n        let scrollDiv = document.createElement('div');\r\n        scrollDiv.style.setProperty('width', '100px');\r\n        scrollDiv.style.setProperty('height', '100px');\r\n        scrollDiv.style.setProperty('overflow', 'scroll');\r\n        scrollDiv.style.setProperty('position', 'absolute');\r\n        scrollDiv.style.setProperty('top', '-9999px');\r\n        document.body.appendChild(scrollDiv);\r\n        _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n        document.body.removeChild(scrollDiv);\r\n    }\r\n    return _scrollbarWidth;\r\n}\r\nexport function findScrollableParent(startingElement) {\r\n    let el = startingElement;\r\n    while (el && el !== document.body) {\r\n        if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\r\n            return el;\r\n        }\r\n        el = el.parentElement;\r\n    }\r\n    el = startingElement;\r\n    while (el && el !== document.body) {\r\n        if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\r\n            const computedStyles = getComputedStyle(el);\r\n            let overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';\r\n            if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\r\n                return el;\r\n            }\r\n        }\r\n        el = el.parentElement;\r\n    }\r\n    if (!el || el === document.body) {\r\n        el = window;\r\n    }\r\n    return el;\r\n}\r\n"}
