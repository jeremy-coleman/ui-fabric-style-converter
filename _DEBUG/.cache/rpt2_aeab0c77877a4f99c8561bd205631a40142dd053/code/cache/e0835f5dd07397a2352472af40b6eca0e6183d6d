{"code":"import * as React from 'react';\r\nimport { Customizations } from './Customizations';\r\nimport { hoistStatics } from './hoistStatics';\r\nimport { CustomizerContext } from './Customizer';\r\nimport { concatStyleSets } from '@uifabric/merge-styles';\r\nexport function customizable(scope, fields, concatStyles) {\r\n    return function customizableFactory(ComposedComponent) {\r\n        var _a;\r\n        const resultClass = (_a = class ComponentWithInjectedProps extends React.Component {\r\n                constructor(props) {\r\n                    super(props);\r\n                    this._onSettingChanged = this._onSettingChanged.bind(this);\r\n                }\r\n                componentDidMount() {\r\n                    Customizations.observe(this._onSettingChanged);\r\n                }\r\n                componentWillUnmount() {\r\n                    Customizations.unobserve(this._onSettingChanged);\r\n                }\r\n                render() {\r\n                    return (React.createElement(CustomizerContext.Consumer, null, (context) => {\r\n                        const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\r\n                        const componentProps = this.props;\r\n                        if (concatStyles) {\r\n                            const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\r\n                            return React.createElement(ComposedComponent, Object.assign({}, defaultProps, componentProps, { styles: mergedStyles }));\r\n                        }\r\n                        return React.createElement(ComposedComponent, Object.assign({}, defaultProps, componentProps));\r\n                    }));\r\n                }\r\n                _onSettingChanged() {\r\n                    this.forceUpdate();\r\n                }\r\n            },\r\n            _a.displayName = 'Customized' + scope,\r\n            _a);\r\n        return hoistStatics(ComposedComponent, resultClass);\r\n    };\r\n}\r\n"}
