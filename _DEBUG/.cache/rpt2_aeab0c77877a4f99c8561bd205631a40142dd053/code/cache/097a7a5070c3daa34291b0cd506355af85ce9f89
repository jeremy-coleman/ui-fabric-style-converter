{"code":"export function findIndex(array, cb) {\r\n    let index = -1;\r\n    for (let i = 0; array && i < array.length; i++) {\r\n        if (cb(array[i], i)) {\r\n            index = i;\r\n            break;\r\n        }\r\n    }\r\n    return index;\r\n}\r\nexport function find(array, cb) {\r\n    let index = findIndex(array, cb);\r\n    if (index < 0) {\r\n        return undefined;\r\n    }\r\n    return array[index];\r\n}\r\nexport function createArray(size, getItem) {\r\n    let array = [];\r\n    for (let i = 0; i < size; i++) {\r\n        array.push(getItem(i));\r\n    }\r\n    return array;\r\n}\r\nexport function toMatrix(items, columnCount) {\r\n    return items.reduce((rows, currentValue, index) => {\r\n        if (index % columnCount === 0) {\r\n            rows.push([currentValue]);\r\n        }\r\n        else {\r\n            rows[rows.length - 1].push(currentValue);\r\n        }\r\n        return rows;\r\n    }, []);\r\n}\r\nexport function removeIndex(array, index) {\r\n    return array.filter((_, i) => index !== i);\r\n}\r\nexport function replaceElement(array, newElement, index) {\r\n    const copy = array.slice();\r\n    copy[index] = newElement;\r\n    return copy;\r\n}\r\nexport function addElementAtIndex(array, index, itemToAdd) {\r\n    const copy = array.slice();\r\n    copy.splice(index, 0, itemToAdd);\r\n    return copy;\r\n}\r\nexport function flatten(array) {\r\n    let result = [];\r\n    array.forEach((item) => (result = result.concat(item)));\r\n    return result;\r\n}\r\nexport function arraysEqual(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < array1.length; i++) {\r\n        if (array1[i] !== array2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n"}
