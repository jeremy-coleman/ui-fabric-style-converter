{"code":"const now = () => (typeof performance !== 'undefined' && !!performance.now ? performance.now() : Date.now());\r\nconst RESET_INTERVAL = 3 * 60 * 1000;\r\nexport class FabricPerformance {\r\n    static measure(name, func) {\r\n        if (FabricPerformance._timeoutId) {\r\n            FabricPerformance.setPeriodicReset();\r\n        }\r\n        const start = now();\r\n        func();\r\n        const end = now();\r\n        const measurement = FabricPerformance.summary[name] || {\r\n            totalDuration: 0,\r\n            count: 0,\r\n            all: []\r\n        };\r\n        const duration = end - start;\r\n        measurement.totalDuration += duration;\r\n        measurement.count++;\r\n        measurement.all.push({\r\n            duration: duration,\r\n            timeStamp: end\r\n        });\r\n        FabricPerformance.summary[name] = measurement;\r\n    }\r\n    static reset() {\r\n        FabricPerformance.summary = {};\r\n        clearTimeout(FabricPerformance._timeoutId);\r\n        FabricPerformance._timeoutId = NaN;\r\n    }\r\n    static setPeriodicReset() {\r\n        FabricPerformance._timeoutId = setTimeout(() => FabricPerformance.reset(), RESET_INTERVAL);\r\n    }\r\n}\r\nFabricPerformance.summary = {};\r\n"}
